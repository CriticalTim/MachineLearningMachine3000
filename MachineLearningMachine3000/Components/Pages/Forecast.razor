@page "/forecast"
@attribute [StreamRendering]

@inject IFactCaseService FactCaseService
@inject Calculation calc
@using MachineLearningMachine3000.Forecast;

@using MachineLearningMachine3000.Data;
@using MachineLearningMachine3000.Services;

<PageTitle>Foracast und Datenview</PageTitle>

<h1>Ausgangsdaten</h1>
<hr />
<div>
    <button type="button" class="btn btn-outline-primary" @onclick="CalculateForcast"> Forecast erstellen </button>
</div>
<hr />
<div class="table-container">

    @if (factCases == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {

<div class="containerbla">
    <h1>Alte Werte</h1>
    <hr />
    <div class="table1">

        <table>
            <thead>
                <tr>
                    <th>Datum</th>
                    <th>    Eingänge Neu</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var fact in factCases)
                {
                    <tr>
                        <td>@fact.DateId.ToString()</td>
                        <td><div class="vertical-line"></div></td>
                        <td>@fact.SummeVonEingangNeu</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
    }
   
        <div class="vertical-line"></div>
        @if (results == null)
        {
            <p><em>No Forecast available..</em></p>
        }
        else
        {
            <div class="containerbla">
                <h1>Forecast</h1>
                <hr />
                <div class="table2">

                    <table>
                        <thead>
                            <tr>
                                <th>Datum</th>
                                <th>    Eingänge Neu</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var result in results)
                            {
                                <tr>
                                    <td>@result.Date.ToShortDateString()</td>
                                    <td><div class="vertical-line"></div></td>
                                    <td>@result.Value</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

        }
    </div>

    @code {
        List<FactCase> factCases = new List<FactCase>();
        List<ResultSet>? results = null;

protected override async Task OnInitializedAsync()
    {

        factCases = await FactCaseService.GetFactCasesAsync();

        results = calc.ForecastCalculate(factCases);

    }

    Task CalculateForcast()
    {
        results = calc.ForecastCalculate(factCases);
        StateHasChanged();
        return Task.CompletedTask;
    }


    }
